---
layout: post
title: "秘技·JS篇"
date: 2019-12-30 15:30:08 +0800
description: 秘技·JS篇
tags: [前端,JavaScript,玄学]
img: import/JavaScript.jpg
---

> 

>## [JS就像一个深渊，当你凝视深渊的时候,深渊也在凝视着你。](/)

### 1.【秘技】向下取整
```js
let a = ~~1.2;
let b= 1.2 | 0;
let c= 1.2 ^ 0;
let d= 1.2 >> 0;
let e= 1.2 << 0; // 同上
```
<img width="406" alt="1" src="https://user-images.githubusercontent.com/39766913/71475042-71fe3500-2819-11ea-9230-db9ad68c2b02.png">

> 注：当数值超过±2^31-1即2147483647时，位操作会产生问题，所以，使用时请限制使用范围。

### 2.【秘技】交换数值
```js
let a=1,b=2;
```
**普攻**
```js
a += b;
b = a - b;
a -= b;
```
<img width="292" alt="2_1" src="https://user-images.githubusercontent.com/39766913/71511102-1ccf2b80-28cc-11ea-91d2-b78fbadc9492.png">

**始解**
```js
a ^= b;
b ^= a;
a ^= b;
```
<img width="271" alt="2_2" src="https://user-images.githubusercontent.com/39766913/71511109-235da300-28cc-11ea-82d7-3771a5a4bd95.png">

**卍解**
```js
[b, a] = [a, b];
```
<img width="296" alt="2_3" src="https://user-images.githubusercontent.com/39766913/71511112-26f12a00-28cc-11ea-8f61-ec5dff7d8ed0.png">

### 3.【秘技】数组去重
**卍解**
```js
[...new Set([1, 2, 3, '1', 2, 3])];
```

> 别想那么多，直接上大招
<img width="346" alt="3" src="https://user-images.githubusercontent.com/39766913/71511814-9c5dfa00-28ce-11ea-8483-f4bf27b798ca.png">

### 4.【秘技】转数值
**卍解**
```js
+'123';
+'45.6';
```
<img width="318" alt="4_1" src="https://user-images.githubusercontent.com/39766913/71570720-a4f24280-2b11-11ea-8241-3a85a145fbeb.png">

> +[]==>0，神奇吧。

> **注意：无效字符串会被转为NaN，慎用！**

_与parseInt区别_

<img width="317" alt="4_2" src="https://user-images.githubusercontent.com/39766913/71570964-ce5f9e00-2b12-11ea-8b41-b352128bd667.png">

### 5.【秘技】转字符串
**卍解**
```js
123+'';
true+'';
[1,2,3]+'';
```
<img width="318" alt="5" src="https://user-images.githubusercontent.com/39766913/71571223-32cf2d00-2b14-11ea-8e53-25b51f1fe85c.png">

### 6.【秘技】转布尔值
**卍解**
```js
!!'123';
!!'';
!!null;
!!{};
!![];
!!0;
!!1;
```
<img width="321" alt="6" src="https://user-images.githubusercontent.com/39766913/71571610-061c1500-2b16-11ea-8d79-83e1391f1295.png">

### 7.【秘技】获取时间戳
**卍解**
```js
+new Date
```
<img width="306" alt="7" src="https://user-images.githubusercontent.com/39766913/71574078-0de1b680-2b22-11ea-9fea-3fc85fe6d93f.png">

### 8.【秘技】格式化金钱
**始解-正则实现**
```js
'1234567890'.replace(/\B(?=(\d{3})+(?!\d))/g, ',');
'1234567890'.replace(/(\d{1,3})(?=(\d{3})+(?:$|\.))/g,'$1,');
```
**卍解**
```js
(1234567890).toLocaleString('en-US');
```
<img width="472" alt="8" src="https://user-images.githubusercontent.com/39766913/71581266-607d9b80-2b3f-11ea-81a0-19b7403ef0d2.png">

> 'en-US'不加也可，(123456789).toLocaleString()

### 9.【秘技】统计字符串中相同字符次数
```js
'abcdabcaba'.split('').reduce((p, k) => (p[k]++ || (p[k] = 1), p), {});
```
<img width="550" alt="9" src="https://user-images.githubusercontent.com/39766913/71651284-5209cc80-2d57-11ea-872f-d0b3fca78601.png">


## [持续更新中。。。](/)

**我不生产代码，我只是代码的搬运工，搬砖去也。(@^_^@)**
